<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>opensoul.org by Brandon Keepers</title>
  <link href="http://opensoul.org"/>
  <link type="application/atom+xml" rel="self" href="http://opensoul.org/feed.xml"/>
  <updated>2015-03-18T00:00:00-04:00</updated>
  <id>http://opensoul.org</id>
  <author>
    <name>Brandon Keepers</name>
    <email>brandon@opensoul.org</email>
  </author>
  
  <entry>
    <title>On the importance of junk drawers</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2015/03/18/junk-drawers/"/>
    <id>/2015/03/18/junk-drawers</id>
    <published>2015-03-18T00:00:00-04:00</published>
    <category term="observation"/>
    <summary type="html">Create junk drawers; for things, for ideas, for time, for relationships. Make space for things that don&#39;t fit in. Let all the things that don&#39;t belong gather in one place. You may be surprised at what emerges to demand its own place.</summary>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;A place for everything and everything in its place.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Things without places are hard to find. Left to lay in some indeterminate place when we are done using them, they even get designated as &lt;em&gt;misplaced&lt;/em&gt;—implying that they had a place to begin with.&lt;/p&gt;

&lt;p&gt;Places that don&amp;#39;t have things are purposeless voids. They are unused capacity in a resource-constrained world. A place&amp;#39;s thing may be a physical thing—such as a gadget or a gizmo—or it may be an abstract thing—such as an expression of art or emotion or identity—or it may be the absence of a thing—such as an empty space where experiences can be had and ideas exchanged. A place&amp;#39;s thing is its purpose, it&amp;#39;s justification for continued existence.&lt;/p&gt;

&lt;p&gt;A junk drawer is a special place. It keeps misfits from encroaching on something else&amp;#39;s place. It creates a place of shelter for the things that don&amp;#39;t belong but still have value. When enough similar things are assembled within its confines, a junk drawer then realizes its greatest potential and it becomes clear that some of these things are similar and warrant their own place.&lt;/p&gt;

&lt;p&gt;Create junk drawers; for things, for ideas, for time, for relationships. Make space for things that don&amp;#39;t fit in. Let all the things that don&amp;#39;t belong gather in one place. You may be surprised at what emerges to demand its own place.&lt;/p&gt;
</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>User-generated content and DOM clobbering</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2014/09/05/dom-clobbering/"/>
    <id>/2014/09/05/dom-clobbering</id>
    <published>2014-09-05T00:00:00-04:00</published>
    <category term="javascript"/><category term="web"/>
    <summary type="html">&lt;p&gt;The web lives and dies by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM&quot;&gt;DOM&lt;/a&gt;. It is both a beautiful and horrible thing. Here is just one example; it&amp;#39;s called &lt;em&gt;&amp;quot;DOM clobbering&amp;quot;&lt;/em&gt;.&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;The web lives and dies by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM&quot;&gt;DOM&lt;/a&gt;. It is both a beautiful and horrible thing. Here is just one example; it&amp;#39;s called &lt;em&gt;&amp;quot;DOM clobbering&amp;quot;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Say you have a site, like &lt;a href=&quot;https://github.com&quot;&gt;GitHub.com&lt;/a&gt;, that allows users to place &lt;a href=&quot;https://help.github.com/articles/github-flavored-markdown&quot;&gt;whatever content they want&lt;/a&gt; on it. You want to be a hospitable host of that content, so you try to make it as feature-ful as possible. For example, if the content includes an &lt;code&gt;h1&lt;/code&gt; tag, you want to add anchors so anyone can link directly to that header.&lt;/p&gt;

&lt;p&gt;There are two ways that browsers support deep-linking to content:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;An &lt;code&gt;id&lt;/code&gt; attribute on any tag.&lt;/li&gt;
&lt;li&gt;an &lt;code&gt;a&lt;/code&gt; tag with a &lt;code&gt;name&lt;/code&gt; attribute.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;problem&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;The Problem&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;solution&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;The Solution&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With either method, users can link to &lt;a href=&quot;#problem&quot;&gt;#problem&lt;/a&gt; and the browser will scroll down to that heading. Ok, we all know how links work, so what&amp;#39;s the big deal?&lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;problem&quot;&gt;&lt;/a&gt; The Problem&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;id&lt;/code&gt; is used by both JavaScript and CSS. Allowing users to create content with arbitrary &lt;code&gt;id&lt;/code&gt; attributes means that they could intentionally or unintentionally break functional or styles. So our first option for deep-linking is out. Good thing we have a second option.&lt;/p&gt;

&lt;p&gt;Unfortunately, there&amp;#39;s this really uncool interaction between HTML and the DOM where elements with a &lt;code&gt;name&lt;/code&gt; attribute are assigned to variables on &lt;code&gt;document&lt;/code&gt;. Early cave dwellers would use this &amp;quot;feature&amp;quot; to quickly gain access to form elements, but this appendix hasn&amp;#39;t been needed since the advent of &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-71555259&quot;&gt;HTML 4.01&lt;/a&gt; when &lt;code&gt;document.getElementsByName&lt;/code&gt; was introduced.&lt;/p&gt;

&lt;p&gt;But, what&amp;#39;s the harm in leaving this feature around? Somebody might still find it useful.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;addEventListener&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Oh, you wanted to bind events?&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Consider your DOM clobbered.&lt;/p&gt;

&lt;p&gt;Now I know what you&amp;#39;re thinking: &amp;quot;Browsers wouldn&amp;#39;t  override existing properties like &lt;code&gt;document.addEventListener&lt;/code&gt;, would they?&amp;quot;. I know, I had the same thought! I don&amp;#39;t want to name names, but certain non-webkit-based browsers may disappoint you.&lt;/p&gt;

&lt;p&gt;Neither option allows us to deep-link to content without the possibility of interfering with the rest of the site. &lt;/p&gt;

&lt;h2&gt;&lt;a id=&quot;solution&quot;&gt;&lt;/a&gt; The Solution&lt;/h2&gt;

&lt;p&gt;Prefix every &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; attribute coming from a user with &lt;code&gt;user-content-&lt;/code&gt;, and use JavaScript to preserve the browser&amp;#39;s scroll on the &lt;code&gt;hashchange&lt;/code&gt; event. So…&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;addEventListener&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;…gets rewritten to…&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;user-content-addEventListener&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then we use this CoffeeScript to preserve the browser&amp;#39;s behavior of scrolling to the hash.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;coffeescript language-coffeescript&quot; data-lang=&quot;coffeescript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;hashchange&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;(event) -&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# We don&amp;#39;t need to do anything if there is no hash.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# We don&amp;#39;t need to do anything if the current target exists&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;:target&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# See if a user-content-* element exists and scroll to it&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;name = &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;user-content-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;target = &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using JavaScript to mimic the browser&amp;#39;s native behavior is usually not ideal. If browsers supported a way to deep-link to content that didn&amp;#39;t have a negative impact on other DOM features, then we wouldn&amp;#39;t even have to worry about it. But they don&amp;#39;t. &lt;/p&gt;

&lt;p&gt;We&amp;#39;ve been using this method on GitHub.com for a few months now without any noticeable impact.&lt;/p&gt;
</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>Hide referrer when clicking a link</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2014/05/15/hide-referrer/"/>
    <id>/2014/05/15/hide-referrer</id>
    <published>2014-05-15T00:00:00-04:00</published>
    <category term="javascript"/><category term="web"/>
    <summary type="html">&lt;p&gt;Sometimes referrers reveal sensitive information. Wouldn&#39;t it be nice if there was a way to hide them when you needed to?&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Hyperlinks are the foundation of the world wide web. Clicking one instantly teleports you to some new magical land. This teleporter has one interesting feature/defect: It tells everyone at your new destination exactly where you came from, called a &amp;quot;referer&amp;quot; (&lt;a href=&quot;http://en.wikipedia.org/wiki/HTTP_referer&quot;&gt;yes, it was mispelled in the original HTTP spec&lt;/a&gt;). Usually you don&amp;#39;t care, and sometimes referrers are even helpful. But sometimes, as &lt;a href=&quot;https://blog.dropbox.com/2014/05/web-vulnerability-affecting-shared-links/&quot;&gt;Dropbox recently discovered&lt;/a&gt;, referrers reveal sensitive information. Wouldn&amp;#39;t it be nice if there was a way to hide them when you needed to?&lt;/p&gt;

&lt;p&gt;Way back in the day when we were building &lt;a href=&quot;http://get.gaug.es&quot;&gt;gaug.es&lt;/a&gt;, we wanted to be able to click on links in our admin interface that would take us to our users&amp;#39; websites, but we didn&amp;#39;t want the referrer to reveal where we were coming from. After some fiddling, we arrived at this clever JavaScript snippet that does just that: it opens a new blank window and visits the clicked URL as if the user typed the URL in themselves.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;openWithoutReferrer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;site&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hide_referrer&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeln&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;window.location = &amp;quot;&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;quot;;&amp;lt;/script&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;site&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can use jQuery to attach this to any link with the &lt;code&gt;hide-referrer&lt;/code&gt; class. Note that due to popup blocking techniques, &lt;code&gt;openWithoutReferrer&lt;/code&gt; has to be called in a click handler.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Open links with &amp;quot;hide-referrer&amp;quot; class without sending the referrer&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;a.hide-referrer&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;openWithoutReferrer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On another project I used the same method, but I didn&amp;#39;t ever want to leak referrer information to any external site.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Open external links without sending the referrer&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;href&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;openWithoutReferrer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There are a couple caveats to this solution:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It requires that the user have JavaScript enabled. If they don&amp;#39;t (because traveled here in a time machine from the 90s and are using Netscape 2, or they are trying to be malicious), referrers will still be sent. You could work around this by setting &lt;code&gt;data-href&lt;/code&gt; instead of &lt;code&gt;href&lt;/code&gt; on all &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tags and update the snippet above accordingly. This will require JavaScript to make any links work.&lt;/li&gt;
&lt;li&gt;It always opens the link in a new window. To my knowledge, there is not a way to do this without opening a new window.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Despite the caveats, I&amp;#39;ve found this to be effective in the couple scenarios that I needed it.&lt;/p&gt;
</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>Lessons learned from a cancelled project</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2014/04/28/failure/"/>
    <id>/2014/04/28/failure</id>
    <published>2014-04-28T00:00:00-04:00</published>
    <category term="github"/><category term="talk"/><category term="popular"/>
    <summary type="html">&lt;p&gt;This is the manuscript for a talk I gave to the &lt;a href=&quot;http://www.meetup.com/grwebdev/events/42172352/&quot;&gt;GRWebDev&lt;/a&gt;. It is the story of a project we canceled at GitHub and the lessons I learned from it.&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;This is the manuscript for a talk I gave to the &lt;a href=&quot;http://www.meetup.com/grwebdev/events/42172352/&quot;&gt;GRWebDev&lt;/a&gt;. It is the story of a project we canceled at GitHub and the lessons I learned from it.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;In October 2012, we gathered a team together to work on a product that would be a new market for GitHub, Inc (the company). The product was an evolution of some internal tools that we had built for recording and sharing presentations at our HQ in San Francisco for our remote employees.&lt;/p&gt;

&lt;p&gt;When our team of 6 people was gathered into a room to kick off the project, we knew two facts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We had some tools hacked together internally for recording talks, and&lt;/li&gt;
&lt;li&gt;We had experience building a website for sharing slide decks (&lt;a href=&quot;http://speakerdeck.com&quot;&gt;speakerdeck.com&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Our mission was to combine those two things into a product that would allow any company like us, a conference or a user group to easily record, stream and share talks.&lt;/p&gt;

&lt;p&gt;11 months later, our team decided to cancel the project.&lt;/p&gt;

&lt;h2&gt;Curate a collective vision&lt;/h2&gt;

&lt;p&gt;This team had never worked together before. We had no shared experience, and no trust. In typical GitHub style, we also did not have managers or a roadmap. None of us knew exactly what the product would look like.&lt;/p&gt;

&lt;p&gt;The best software comes from a team where everyone shares a vision, cares deeply about the result, and are motivated to make it happen. That level of caring and motivation can only come from people that had a role in crafting the vision and own a piece of it.&lt;/p&gt;

&lt;p&gt;We eventually gained each others trust, and our visions started to coalesce, but only after spinning our wheels for 6 months.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lesson 1: Curate a collective vision for the product.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Define success and failure&lt;/h2&gt;

&lt;p&gt;At a place like GitHub with no managers and no schedules, it is tempting to think that if I just work my hardest on a cool project that excites me, that it will magically be successful. This is a lie. Success is a lot of work. Success comes from intentionally avoiding critical mistakes and a lot of luck.&lt;/p&gt;

&lt;p&gt;There is not a magical formula for achieving success, so I can&amp;#39;t tell you how to achieve it. But I know that it is impossible to evaluate if what you are doing is working without criteria to evaluate against. We worked on our project for 6 months before we even sat down to articulate what success and failure looked like.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lesson 2: When you figure out what your vision is, define what it means to be successful, and just as importantly, define what failure looks like. Set goals for achieving success, and check in on those goals at regular intervals.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Create meaningful artificial constraints&lt;/h2&gt;

&lt;p&gt;Our project suffered from a severe lack of constraints. Money was not a factor, we had as much time as we needed, and we defined the feature set. Not everyone has the misfortune of this experience. Without constraints, there is no way to determining importance. When nothing is important, everything is important. When everything is important, prioritization and decision making is impossible.&lt;/p&gt;

&lt;p&gt;It is well known that too many options overwhelm our brains. This phenomenon is chronicled in books like &amp;quot;The Paradox of Choice&amp;quot; or &amp;quot;How We Decide&amp;quot;.  Our brains are quite good at comparing a few options. But when presented with too many options, our brains switch from their fast pattern-matching mode to a slow sequential scan to compare all the details.&lt;/p&gt;

&lt;p&gt;The same thing happens on projects. Designing software to meet all of the requirements at once is  paralyzing. Software is built one feature at a time. Choose constraints to help you focus on the details that mater.&lt;/p&gt;

&lt;p&gt;Milestones are one form of constraint (Some people call them &amp;quot;deadlines&amp;quot;, but I prefer to call them milestones). A milestone is an arbitrary date by which you want to meet a goal. Fixed dates should &lt;em&gt;never&lt;/em&gt; include scope. If you work 60 hours per week trying to meet a deadline, then you have missed the point. A constraint should never be used to get someone to work harder. It is a tool to enable you to work smarter.&lt;/p&gt;

&lt;p&gt;Pick an arbitrary milestone, such as &amp;quot;first beta user 2 weeks from today&amp;quot;, or &amp;quot;first sale in 3 months&amp;quot;. Without fixed scope, deadlines essentially become goals. Everyone has intrinsic motivation to meet the goals.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t change your deadlines in order to cram more features into them. When the deadline comes, ship what you have in its current state. That might sound horrifying, but trust me. Once you do that, you will quickly train yourself to focus on the things that matter and always keep the product in working order.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lesson 3: Create meaningful constraints that make it easier to avoid failure and be successful.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;People matter more than product&lt;/h2&gt;

&lt;p&gt;For the first 9 months, I cared more about the outcome of the product than the people on the team. I gave feedback on ideas, designs and code with the assumption that the most important thing about that interaction was creating a superior product. I was wrong.&lt;/p&gt;

&lt;p&gt;Everyone on the team suffered from burnout. The constant grind of critical feedback was wearing us all down. Everyone lost motivation to work on the things that excited them because they did not think it would be good enough or the right thing to work on.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lesson 4: If you care about people, the product will take care of itself. Pour all your energy into making sure your teammates are enjoying what they are doing. Happier people create better products.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;&amp;quot;Failure&amp;quot; is not failure&lt;/h2&gt;

&lt;p&gt;Canceling a project can be devastating for some people. I had many coworkers that would come ask me &amp;quot;how are you doing?&amp;quot; as if I just lost a loved one. It has taken a lot of practice from past failures, but I have gotten good at dealing with &amp;quot;failure&amp;quot;.&lt;/p&gt;

&lt;p&gt;Success is a poor teacher. Since there is not formula for success, and success comes so infrequently, the &amp;quot;survivorship bias&amp;quot; makes is difficult to identify what factors lead to success. It is nearly impossible to decipher if the project was successful because of or in spite of what the team did.&lt;/p&gt;

&lt;p&gt;Canceling a project is a great learning experience. Deciding to cancel it is a conscious analysis that the resources being put into the project could be better used elsewhere. The biggest challenge is to be aware of that fact at the earliest possible moment so you avoid putting resources into something that is not worthy.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Lesson 5: &amp;quot;Failure&amp;quot; is when you learn how to do something better the next time. I like failure.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Why we cancelled it&lt;/h2&gt;

&lt;p&gt;We learned many more lessons in the 11 months that we worked on the product. These are the ones that seemed most significant to me. But none of these failures were the primary reason we cancelled the project.&lt;/p&gt;

&lt;p&gt;Our slogan for GitHub.com (the website) is &amp;quot;Build software better, together.&amp;quot; As we have continued to grow and evolve, we have wrestled with whether or not this adequately describes the vision for GitHub, Inc, (the company). We often talk about our vision as a company is to &amp;quot;make it easier to work together than alone&amp;quot;.  With up to 75% of our employees being remote, working together becomes particularly challenging when you are in different timezones. It is easy for people to become isolated. We run into unique challenges that other companies don&amp;#39;t face.&lt;/p&gt;

&lt;p&gt;GitHub has always resonated with the open source culture in our desire to write software for problems that cause us pain. We feel the pain of working together in general, so we are tempted to scratch that itch. But I think we are finding that we have a much better understanding of how people work together &lt;em&gt;on software&lt;/em&gt;. Building a tool to make it easier to work together in any other realm requires an intimate understanding of the unique challenges.&lt;/p&gt;

&lt;p&gt;Ultimately we decided to cancel the project because it did not fit in with the vision of where GitHub is going. I would like to think that under different circumstances we would taken these lessons and still been able to ship a successful product. Or maybe we would not have learned these lessons without looking through the lens of &amp;quot;failure&amp;quot;.&lt;/p&gt;

&lt;p&gt;Either way, I am thankful for the lessons it taught me, I look forward to applying these lessons on my next project.&lt;/p&gt;
</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>A GIF is worth a thousand screenshots</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2014/02/26/gif/"/>
    <id>/2014/02/26/gif</id>
    <published>2014-02-26T00:00:00-05:00</published>
    <category term="tips"/><category term="app"/>
    <summary type="html">&lt;p&gt;Did you know that GIFs have productive uses? Yep, &lt;a href=&quot;http://media3.giphy.com/media/Nx2Lx1RmLadtC/giphy.gif&quot;&gt;deal with it&lt;/a&gt;! Lately, I have been including &lt;a href=&quot;https://github.com/bkeepers/github-notifications/pull/45&quot;&gt;GIF screencasts on pull requests&lt;/a&gt; that include user interface changes as a way to clearly demonstrate the changes.&lt;/p&gt;
</summary>
    <content type="html">&lt;p&gt;Did you know that GIFs have productive uses? Yep, &lt;a href=&quot;http://media3.giphy.com/media/Nx2Lx1RmLadtC/giphy.gif&quot;&gt;deal with it&lt;/a&gt;! Lately, I have been including &lt;a href=&quot;https://github.com/bkeepers/github-notifications/pull/45&quot;&gt;GIF screencasts on pull requests&lt;/a&gt; that include user interface changes as a way to clearly demonstrate the changes.&lt;/p&gt;

&lt;div class=&quot;framed&quot;&gt;
&lt;img src=&quot;/assets/comment-shortcuts-116a3c68316c0143bafe34917739b92f.gif&quot;&gt;
&lt;/div&gt;

&lt;p&gt;It&amp;#39;s an extermely effective way to communicate what has changed. These screencasts have other uses, such as showing how to use a feature or demonstrating a bug.&lt;/p&gt;

&lt;p&gt;There are a lot of ways to make a GIF screencast, but &lt;a href=&quot;http://www.cockos.com/licecap/&quot;&gt;LICEcap&lt;/a&gt; is the best tool I have found found. It is not the prettiest piece of software that I have ever laid eyes on, but it just works and makes fantastic GIFs. The GIF above is 26 seconds long, great quailty, but only 500 KB.&lt;/p&gt;
</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>Ruby at GitHub</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2013/04/30/ruby-at-github/"/>
    <id>/2013/04/30/ruby-at-github</id>
    <published>2013-04-30T03:25:00Z</published>
    <category term="github"/><category term="ruby"/><category term="talk"/>
    <summary type="html">&lt;p&gt;Here&amp;#8217;s the video and slides for my recent talk &amp;#8220;Ruby at GitHub&amp;#8221; at &lt;a href=&quot;http://mtnwestrubyconf.org/&quot;&gt;MountainWest RubyConf&lt;/a&gt;.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;Here&amp;#8217;s the video and slides for my recent talk &amp;#8220;Ruby at GitHub&amp;#8221; at &lt;a href=&quot;http://mtnwestrubyconf.org/&quot;&gt;MountainWest RubyConf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/5vUD9Zg7gp0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;48da9fa080340130c3a512313d241e1b&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>Siri, add toilet paper to the shopping list</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2013/01/07/siri-add-toilet-paper-to-the-shopping-list/"/>
    <id>/2013/01/07/siri-add-toilet-paper-to-the-shopping-list</id>
    <published>2013-01-07T14:00:00Z</published>
    <category term="app"/><category term="mac"/>
    <summary type="html">&lt;p&gt;The Reminders app on iOS and Mac has quickly become one of my favorite apps, mostly due to its integration with Siri and the ability to share lists with my wife.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;The Reminders app on iOS and Mac has quickly become one of my favorite apps, mostly due to its integration with Siri and the ability to share lists with my wife.&lt;/p&gt;
&lt;p&gt;I almost always have my phone in my hand, so no matter how predisposed I am, I can afford to hold down the home button and say, &amp;#8220;Siri, add toilet paper to the shopping list&amp;#8221;, or &amp;#8220;Remind me to turn off the porch light when I get home.&amp;#8221;&lt;/p&gt;
&lt;p class=&quot;half&quot;&gt;&lt;img src=&quot;/assets/IMG_0002_2-a641c2b3e0641a37623eae900e610d97.jpg&quot;&gt; &lt;img src=&quot;/assets/IMG_0004_2-f5da8ef8610664a7cc4bbef339903762.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;It hasn&amp;#8217;t been added the Reminders iOS app yet, so many people don&amp;#8217;t know it exists, but from the Mac app or &lt;a href=&quot;http://icloud.com&quot;&gt;iCloud.com&lt;/a&gt; you can share a list. The list has to be synced with iCloud for this to work.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/assets/Screen_Shot_2013_01_05_at_11_53_17_PM-9a1ff6fbf7fe6af30999650f9d44951b.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Reminders is far from perfect, but it&amp;#8217;s the only list–paper or otherwise–that I&amp;#8217;ve been able to stick with for more than a week. It offers a glimpse of what the future holds for reminder and todo apps—and takes me one step closer to being completely useless without my phone.&lt;/p&gt;</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>Convert a GitHub Issue Into a Pull Request</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2012/11/09/convert-a-github-issue-into-a-pull-request/"/>
    <id>/2012/11/09/convert-a-github-issue-into-a-pull-request</id>
    <published>2012-11-09T14:00:00Z</published>
    <category term="github"/>
    <summary type="html">&lt;p&gt;A little-known-feature of the GitHub &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; is the ability to attach changes to an issue, converting it into a pull request. The &lt;a href=&quot;http://defunkt.io/hub/&quot;&gt;hub&lt;/a&gt; command, a wrapper around &lt;code&gt;git&lt;/code&gt; that makes it more GitHub aware, allows you to easily do this.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;A little-known-feature of the GitHub &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; is the ability to attach changes to an issue, converting it into a pull request. The &lt;a href=&quot;http://defunkt.io/hub/&quot;&gt;hub&lt;/a&gt; command, a wrapper around &lt;code&gt;git&lt;/code&gt; that makes it more GitHub aware, allows you to easily do this.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;hub pull-request -i 384 -b bkeepers:master -h bkeepers:branch-name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
	&lt;li&gt;&lt;code&gt;-i&lt;/code&gt; is the GitHub issue number&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; is the base, or where you want to send the pull request, with &lt;code&gt;bkeepers&lt;/code&gt; being the owner of the repository.&lt;/li&gt;
	&lt;li&gt;&lt;code&gt;-h&lt;/code&gt; is the head, or the branch where your changes live.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;ins&gt;Update: in the comments, &lt;a href=&quot;http://ghickman.co.uk/&quot;&gt;George Hickman&lt;/a&gt; suggests: &amp;#8220;as long as you&amp;#8217;ve pushed your changes and your local branch is tracking your remote you can exclude the &lt;code&gt;-b&lt;/code&gt; and &lt;code&gt;-h&lt;/code&gt; options!&amp;#8221;. Note that you can set up tracking when pushing with &lt;code&gt;git push -u origin branch-name&lt;/code&gt;.&lt;/ins&gt;&lt;/p&gt;
&lt;p&gt;I put together a quick (crappy quality) video showing how this works.&lt;/p&gt;
&lt;p&gt;&lt;iframe src=&quot;http://player.vimeo.com/video/52962538&quot; width=&quot;580&quot; height=&quot;435&quot; frameborder=&quot;0&quot; webkitAllowFullScreen mozallowfullscreen allowFullScreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;My workflow lately has been something like this:&lt;/p&gt;
&lt;p&gt;1. Create a milestone in GitHub Issues for the mini-project I am working on&lt;br /&gt;
2. Create Issues for the features I can foresee and begin discussions&lt;br /&gt;
3. Work on the code for an issue in a branch&lt;br /&gt;
4. Push the branch and convert the issue into a pull request with the command above&lt;/p&gt;
&lt;p&gt;This workflow is also great for handling bugs, where someone likely opened an issue to report it, you create the fix in a branch, attach it to the issue, and then close it by merging the pull request.&lt;/p&gt;
&lt;p&gt;The biggest caveat with this approach is that it does not work well for experimental code. There is not undo button for converting a pull request back into a plain ol&amp;#8217; issue, nor is there a way to replace the pull request with a different one.  So if you convert an issue into a pull request, and then decided you don&amp;#8217;t like the implementation, you have to close the issue, burying the discussion around it.&lt;/p&gt;</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>Add helper methods to your Rails console</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2012/11/08/add-helper-methods-to-your-rails-console/"/>
    <id>/2012/11/08/add-helper-methods-to-your-rails-console</id>
    <published>2012-11-08T14:00:00Z</published>
    <category term="rails"/><category term="speakerdeck"/>
    <summary type="html">&lt;p&gt;If you use the console on your production application with any regularity, then having helpers for your application is a must! I use the console on &lt;a href=&quot;https://speakerdeck.com&quot;&gt;Speaker Deck&lt;/a&gt; often to debug issues processing PDFs. I almost always start by finding a user by their username or a talk by its &lt;span class=&quot;caps&quot;&gt;URL&lt;/span&gt;, so I added helpers to make it brainless.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;If you use the console on your production application with any regularity, then having helpers for your application is a must! I use the console on &lt;a href=&quot;https://speakerdeck.com&quot;&gt;Speaker Deck&lt;/a&gt; often to debug issues processing PDFs. I almost always start by finding a user by their username or a talk by its &lt;span class=&quot;caps&quot;&gt;URL&lt;/span&gt;, so I added helpers to make it brainless.&lt;/p&gt;
&lt;p&gt;Adding helpers to the Rails 3 console is easy. Define your helper methods in a module in your &lt;code&gt;lib&lt;/code&gt; directory.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SpeakerDeck&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# These methods are included into the Rails console&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Console&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Find a user by username&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_by_username!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Find a talk by url, e.g. &amp;quot;holman/how-to-be-sexy-like-me&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slug&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;Talk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_by_username_and_slug!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then, in your &lt;code&gt;application.rb&lt;/code&gt; file, pass a block to &lt;code&gt;#console&lt;/code&gt; that includes your module into &lt;code&gt;Rails::ConsoleMethods&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SpeakerDeck&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Application&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# …&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;speaker_deck/console&amp;#39;&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ConsoleMethods&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:include&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SpeakerDeck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Console&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now, when you run &lt;code&gt;rails console&lt;/code&gt;, your methods are available.&lt;/p&gt;
&lt;pre&gt;
&amp;gt;&amp;gt; user = u &#39;bkeepers&#39;
=&amp;gt; #&amp;lt;User id:…&amp;gt;
&amp;gt;&amp;gt; talk = t &#39;sachag/side-projects&#39;
=&amp;gt; #&amp;lt;Talk id:…&amp;gt;
&lt;/pre&gt;</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>Abusing Rails I18N to Set Page Titles</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2012/11/05/abusing-rails-i18n-to-set-page-titles/"/>
    <id>/2012/11/05/abusing-rails-i18n-to-set-page-titles</id>
    <published>2012-11-05T14:55:00Z</published>
    <category term="rails"/><category term="speakerdeck"/>
    <summary type="html">&lt;p&gt;I got tired of &lt;code&gt;@page_title&lt;/code&gt; variables being sprinkled around in controllers and views on &lt;a href=&quot;https://speakerdeck.com&quot;&gt;Speaker Deck&lt;/a&gt;, so I made good use of &lt;a href=&quot;http://guides.rubyonrails.org/i18n.html&quot;&gt;Rails&amp;#8217; I18n &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt;&lt;/a&gt; to define them all in one spot.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I got tired of &lt;code&gt;@page_title&lt;/code&gt; variables being sprinkled around in controllers and views on &lt;a href=&quot;https://speakerdeck.com&quot;&gt;Speaker Deck&lt;/a&gt;, so I made good use of &lt;a href=&quot;http://guides.rubyonrails.org/i18n.html&quot;&gt;Rails&amp;#8217; I18n &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt;&lt;/a&gt; to define them all in one spot.&lt;/p&gt;
&lt;p&gt;My &lt;code&gt;config/locales/en.yml&lt;/code&gt; now looks something like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;en&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Speaker&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Deck&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Share&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Presentations&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;without&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;the&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Mess&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Sign&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Up&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;My&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Account&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;%{category}&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;likes&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Presentations&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Liked&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%{user}&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;passwords&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Password&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Reset&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;talks&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;All&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Presentations&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;edit&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Edit&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%{talk}&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;New&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Presentation&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;%{talk}&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;Talks&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%{user}&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To make this work, add a &lt;code&gt;#page_title&lt;/code&gt; helper method, which looks up the page title translation using the controller and action name.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;TitleHelper&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;page_title&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_title_translation_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;page_title_context&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:default&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:&amp;quot;title.default&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;page_title_translation_key&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:&amp;quot;title.&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;controller_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;page_title_context&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view_assigns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;symbolize_keys&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The helper also passes all of the instance variables assigned in the controller, so you can use any of those variables in your page title. The only caveat is that we have to define &lt;code&gt;#to_s&lt;/code&gt; in order for our model objects to show up properly in the title:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now in our layout, we can use our new helper:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;erb&quot;&gt;&lt;span class=&quot;x&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;%=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;page_title&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;span class=&quot;x&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;#8217;m really happy with how this little hack worked out. This almost seems like something that should be in Rails core. Maybe I&amp;#8217;ll have to submit a pull request…&lt;/p&gt;</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>Why Hypermedia APIs Matter</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2012/10/29/why-hypermedia-apis-matter/"/>
    <id>/2012/10/29/why-hypermedia-apis-matter</id>
    <published>2012-10-29T13:00:00Z</published>
    <category term="api"/>
    <summary type="html">&lt;p&gt;You have probably heard recent ramblings about &lt;em&gt;Hypermedia APIs&lt;/em&gt;, or &lt;a href=&quot;http://en.wikipedia.org/wiki/HATEOAS&quot;&gt;&lt;span class=&quot;caps&quot;&gt;HATEOAS&lt;/span&gt;&lt;/a&gt;, and you completely ignored it because it doesn&amp;#8217;t seem to matter. Well, I am here to tell you why it matters. &lt;em&gt;Hypermedia APIs&lt;/em&gt; are all about building APIs that allow clients to adapt to changes.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;You have probably heard recent ramblings about &lt;em&gt;Hypermedia APIs&lt;/em&gt;, or &lt;a href=&quot;http://en.wikipedia.org/wiki/HATEOAS&quot;&gt;&lt;span class=&quot;caps&quot;&gt;HATEOAS&lt;/span&gt;&lt;/a&gt;, and you completely ignored it because it doesn&amp;#8217;t seem to matter. Well, I am here to tell you why it matters. &lt;em&gt;Hypermedia APIs&lt;/em&gt; are all about building APIs that allow clients to adapt to changes.&lt;/p&gt;
&lt;p&gt;Say you build an amazing &lt;span class=&quot;caps&quot;&gt;REST&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; for your awesome app. People read your &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; docs and start using it because, well, it&amp;#8217;s amazing. Then, your application evolves. You want to change things, but &lt;strong&gt;you can&amp;#8217;t&lt;/strong&gt;, because clients are hard-coded to your &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; docs. You now have 3 options: 1) avoid changing your app, 2) change it and break existing clients, 3) fork your &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; and maintain two versions while you wait for old clients to update to the new version. All three of these options suck.&lt;/p&gt;
&lt;p&gt;You thought you built a &lt;span class=&quot;caps&quot;&gt;REST&lt;/span&gt; &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; by using &lt;span class=&quot;caps&quot;&gt;HTTP&lt;/span&gt; verbs and real URLs. That&amp;#8217;s not &lt;span class=&quot;caps&quot;&gt;REST&lt;/span&gt;. Read Roy Fielding&amp;#8217;s rant &lt;a href=&quot;http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven&quot;&gt;&lt;span class=&quot;caps&quot;&gt;REST&lt;/span&gt; APIs must be hypertext-driven&lt;/a&gt;. Roy knows a thing or two about &lt;span class=&quot;caps&quot;&gt;REST&lt;/span&gt;; he kinda &lt;a href=&quot;http://www.ics.uci.edu/~fielding/pubs/dissertation/top.htm&quot;&gt;invented it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you want to build APIs that can adapt along with your application, then you need to learn about Hypermedia APIs. Many people are writing great resources about what this hypermedia stuff is all about. I don&amp;#8217;t need to duplicate their effort. If you want to learn how to build adaptable APIs, then start with Steve Klabnik&amp;#8217;s &lt;a href=&quot;http://blog.steveklabnik.com/posts/2012-02-27-hypermedia-api-reading-list&quot;&gt;Hypermedia &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; reading list&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There is currently a severe lack of example Hypermedia APIs. I am working on the &lt;a href=&quot;https://speakerdeck.com&quot;&gt;Speaker Deck&lt;/a&gt; &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; and hope to have at least one good example soon.&lt;/p&gt;</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>Load environment variables with dotenv</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2012/07/24/dotenv/"/>
    <id>/2012/07/24/dotenv</id>
    <published>2012-07-24T04:00:00Z</published>
    <category term="gem"/>
    <summary type="html">&lt;p&gt;I released &lt;a href=&quot;https://github.com/bkeepers/dotenv&quot;&gt;dotenv&lt;/a&gt;, a handy Ruby gem that makes loading environment variables 100% less painful in development, guaranteed or your money back.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I released &lt;a href=&quot;https://github.com/bkeepers/dotenv&quot;&gt;dotenv&lt;/a&gt;, a handy Ruby gem that makes loading environment variables 100% less painful in development, guaranteed or your money back.&lt;/p&gt;
&lt;h2&gt;Backstory&lt;/h2&gt;
&lt;p&gt;I love the emerging practice of storing application configuration in environment variables. It makes it ridiculously easy to keep secure data out of your code repository while still making it available at runtime. But it slightly complicates development. It&amp;#8217;s not always practical to set all of those environment variables on your development machine or continuous integration server where you might run multiple projects.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ddollar/foreman&quot;&gt;Foreman&lt;/a&gt; provides this handy feature of loading variables from &lt;code&gt;.env&lt;/code&gt;, which works great for anything that you want to put in your &lt;code&gt;Procfile&lt;/code&gt;. But it doesn&amp;#8217;t help you when you run your app manually, run a rake task, or open up the console. My co-workers got tired of me saying &lt;em&gt;Works For Me™&lt;/em&gt;, so &lt;a href=&quot;https://github.com/bkeepers/dotenv&quot;&gt;dotenv&lt;/a&gt; solves that problem.&lt;/p&gt;
&lt;h2&gt;Frontstory&lt;/h2&gt;
&lt;p&gt;For Rails 3 apps, &lt;a href=&quot;https://github.com/bkeepers/dotenv&quot;&gt;dotenv&lt;/a&gt; will automagically load variables from &lt;code&gt;.env&lt;/code&gt; into &lt;code&gt;ENV&lt;/code&gt; whenever the environment is bootstrapped. For non-Rails apps, it&amp;#8217;s a simple one-liner to load &lt;code&gt;.env&lt;/code&gt;. Check out &lt;a href=&quot;https://github.com/bkeepers/dotenv&quot;&gt;dotenv on GitHub&lt;/a&gt; for all the gory details.&lt;/p&gt;</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>What&#39;s it like to work at GitHub?</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2012/06/05/whats-it-like-to-work-at-github/"/>
    <id>/2012/06/05/whats-it-like-to-work-at-github</id>
    <published>2012-06-05T13:00:00Z</published>
    <category term="github"/><category term="popular"/>
    <summary type="html">&lt;p&gt;I have been traveling a lot lately, and everywhere I go, I get this question: What&amp;#8217;s it like to work at &lt;a href=&quot;http://github.com/about&quot;&gt;GitHub&lt;/a&gt;? The simple answer: it is &lt;strong&gt;amazing&lt;/strong&gt;!&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;I have been traveling a lot lately, and everywhere I go, I get this question: What&amp;#8217;s it like to work at &lt;a href=&quot;http://github.com/about&quot;&gt;GitHub&lt;/a&gt;? The simple answer: it is &lt;strong&gt;amazing&lt;/strong&gt;!&lt;/p&gt;
&lt;h2&gt;Is it true that you work on whatever you want?&lt;/h2&gt;
&lt;p&gt;Yes. On a few occasions, someone may suggest that I check out a project that could use my help, but nobody tells me what to do. Everyone is encouraged to work on something that interests them and also benefits the company.&lt;/p&gt;
&lt;p&gt;Our &amp;#8220;Director of Engineering&amp;#8221; Ryan Tomayko &lt;a href=&quot;http://tomayko.com/writings/management-style&quot;&gt;writes&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I don&amp;#8217;t scale. If I tell someone what to do and they do it, then what? Do I have to tell them another thing to do? What happens when I have to decide what to do for 20 people?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Actually, you should just just go &lt;a href=&quot;http://tomayko.com/writings/management-style&quot;&gt;read his whole post &lt;em&gt;right now&lt;/em&gt;&lt;/a&gt;. I will wait…&lt;/p&gt;
&lt;h2&gt;How is that not anarchy?&lt;/h2&gt;
&lt;p&gt;It is. &lt;a href=&quot;http://en.wikipedia.org/wiki/Anarchy&quot;&gt;Anarchy&lt;/a&gt; is a system of governance &amp;#8220;that goes to lengths to avoid the use of coercion, violence, force and authority, while still producing a productive and desirable society&amp;#8221;.&lt;/p&gt;
&lt;p&gt;Anarchy works wonderfully in a small group of individuals with a high level of trust. Everyone at GitHub has full access and permission to do whatever they want. Do great things and you earn respect. Abuse that freedom and you violate everyone&amp;#8217;s trust.&lt;/p&gt;
&lt;h2&gt;How do you decide what to work on?&lt;/h2&gt;
&lt;p&gt;&lt;ins&gt;Several people have asked in the comments and on twitter about this, so I though it was worth addressing.&lt;/ins&gt;&lt;/p&gt;
&lt;p&gt;We have the advantage of &lt;a href=&quot;http://zachholman.com/talk/how-github-uses-github-to-build-github&quot;&gt;using GitHub to build GitHub&lt;/a&gt;, so we are intimately aware of the strengths and weaknesses. We use &lt;a href=&quot;https://github.com/blog/831-issues-2-0-the-next-generation&quot;&gt;GitHub Issues&lt;/a&gt; to keep track of bugs and feature requests that we would like to implement. We also have an internal ideas board for grander ideas that don&amp;#8217;t fit into one issue. Anyone can post to it and comment.&lt;/p&gt;
&lt;p&gt;The founders and other core people certainly help set a vision for where we are going, but we all take responsibility for deciding what to work on.&lt;/p&gt;
&lt;h2&gt;What if the thing you want to ship does not benefit the company?&lt;/h2&gt;
&lt;p&gt;Each person at GitHub has the responsibility to sell their ideas to the rest of the company. I quickly learned that if I can&amp;#8217;t get anyone else interested in the project that I want to work on, then either I poorly articulated my vision, or more likely, it does not benefit the company. You can still work on it, but you will likely be working alone.&lt;/p&gt;
&lt;h2&gt;What if someone is not doing their fair share?&lt;/h2&gt;
&lt;p&gt;Then they feel insanely guilty because they let everyone down. We are all motivated more by our intrinsic desire to create than by carrots and sticks. The joy of shipping is the greatest motivator. Nobody wants to feel like they are not pulling their own weight.&lt;/p&gt;
&lt;h2&gt;What are your biggest challenges?&lt;/h2&gt;
&lt;p&gt;There have been a few.&lt;/p&gt;
&lt;h3&gt;Overcommitment&lt;/h3&gt;
&lt;p&gt;The Venn diagram of what interests me and what benefits GitHub looks like two circles getting freaky. There are so many amazing things going on and it is tempting to try to be a part of all of them. I constantly overcommit myself and as a result have not lived up to my own productivity standards for the last several months.&lt;/p&gt;
&lt;p&gt;Our benevolent leaders recently called on all of us to focus all our time on shipping &lt;em&gt;one&lt;/em&gt; thing. Not allowing myself to commit to something until the current thing I am working on has shipped is teaching me to say &amp;#8220;no&amp;#8221;.&lt;/p&gt;
&lt;h3&gt;Signal vs. Noise&lt;/h3&gt;
&lt;p&gt;With almost 80 people, no hierarchy, and so many amazing projects going on, there is a lot of noise. And I mean &lt;strong&gt;a lot&lt;/strong&gt;. For the first few months, I tried to keep up with what all was going on. But I quickly found myself paralyzed. I was spending half my day just keeping up with what my coworkers were thinking and doing.&lt;/p&gt;
&lt;p&gt;I have learned to ignore it all unless it is directly related to what I am shipping.&lt;/p&gt;
&lt;h3&gt;Opinion overload&lt;/h3&gt;
&lt;p&gt;Talented people with a lot of experience have strong opinions. With experience comes baggage, and we all have baggage. We swear off tools or techniques because they failed in one situation, without realizing it simply was not a good fit for that situation. Now imagine &lt;del&gt;55&lt;/del&gt; &lt;del&gt;70&lt;/del&gt; 80 experienced people all trying to build amazing things together. There are a lot of intense discussions about what tools we should or should not use and how features should or should not work. Most of it is productive, but it can become tiring.&lt;/p&gt;
&lt;p&gt;I have learned that nothing solves an argument like a &lt;a href=&quot;https://github.com/blog/1124-how-we-use-pull-requests-to-build-github&quot;&gt;pull request&lt;/a&gt; with working code. Working code moves the conversation forward, and changes are made from there. If you don&amp;#8217;t like someone&amp;#8217;s pull request, then go create your own and lobby for its acceptance.&lt;/p&gt;
&lt;p&gt;Compared to what people have to deal with in other work environments, these are all first world problems.&lt;/p&gt;
&lt;h2&gt;Where will this lead?&lt;/h2&gt;
&lt;p&gt;My time at GitHub has been the best six months of my career. I absolutely love the service that we are building. But even more than that, I love the company we are building. If GitHub has only one lasting impact on the world, I hope we can inspire other companies to change how they work.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Do you have more questions about GitHub? Feel free to ask in the comments, and I will do my best to answer them.&lt;/em&gt;&lt;/p&gt;</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>Releasing multiple gems from one repository</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2012/05/30/releasing-multiple-gems-from-one-repository/"/>
    <id>/2012/05/30/releasing-multiple-gems-from-one-repository</id>
    <published>2012-05-30T15:00:00Z</published>
    <category term="gem"/><category term="ruby"/>
    <summary type="html">&lt;p&gt;When I released &lt;a href=&quot;https://github.com/bkeepers/qu&quot;&gt;qu&lt;/a&gt;, I wanted to split the various backends and exception handlers into multiple gems so each gem had the proper dependencies without enforcing all of the dependencies on everyone all the time.&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;When I released &lt;a href=&quot;https://github.com/bkeepers/qu&quot;&gt;qu&lt;/a&gt;, I wanted to split the various backends and exception handlers into multiple gems so each gem had the proper dependencies without enforcing all of the dependencies on everyone all the time.&lt;/p&gt;
&lt;p&gt;I had to decide between maintaining multiple repositories for each plugin, or releasing them all from the same repository.  There are advantages and disadvantages to both, but I decided I would rather start with them in one repository and split them out later if it became a problem.&lt;/p&gt;
&lt;p&gt;Several people have asked how I did it. Here&amp;#8217;s my secret formula.&lt;/p&gt;
&lt;h2&gt;Plugin gemspec&lt;/h2&gt;
&lt;p&gt;For each gem we want to release, we need a gemspec. For example, check out &lt;a href=&quot;https://github.com/bkeepers/qu/blob/master/qu-redis.gemspec&quot;&gt;&lt;code&gt;qu-redis.gemspec&lt;/code&gt;&lt;/a&gt;. Most of the gemspec is standard, but there are a few things I want to draw to your attention.&lt;/p&gt;
&lt;p&gt;Since we&amp;#8217;ll be releasing multiple gems out of this directory, we need to make sure we get the right files for this gem. You can use whatever criteria makes sense for your project, but for &lt;code&gt;qu-redis&lt;/code&gt; it worked out to just grab any file that has &amp;#8220;redis&amp;#8221; in the name.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`git ls-files -- lib | grep redis`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We need to make sure that this plugin then depends on a compatible version of the main library. For Qu, I lock each plugin to the exact version. When I release a bugfix, I release a new version of each gem, whether it is changed or not.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_dependency&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;qu&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Qu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VERSION&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Each plugin can and should declare any other dependencies.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_dependency&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;redis-namespace&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_dependency&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;simple_uuid&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now we have a gem for our plugin, with its own files and dependencies.&lt;/p&gt;
&lt;h2&gt;Main gemspec&lt;/h2&gt;
&lt;p&gt;The gemspec for our &amp;#8220;core&amp;#8221; library will look a little different. Check out &lt;a href=&quot;https://github.com/bkeepers/qu/blob/master/qu.gemspec&quot;&gt;&lt;code&gt;qu.gemspec&lt;/code&gt;&lt;/a&gt; for the full version. We want to avoid including files from other gems in our project, so first we get a list of those files.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;plugin_files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;qu-*.gemspec&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gemspec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gemspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatten&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uniq&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We get a list of the files for the gem, and then exclude files from our other gems.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`git ls-files`&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plugin_files&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;Gemfile&lt;/h2&gt;
&lt;p&gt;If you&amp;#8217;re using bundler for your development dependencies (which you should be), then you probably want to lock the dependencies from your gemspecs without having to redeclare them. We can easily tell bundler about all of our gemspecs.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:rubygems&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gemspec&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;qu&amp;#39;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;qu-*.gemspec&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gemspec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gemspec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/qu-(.*)\.gemspec/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatten&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gemspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;qu-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:development_group&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;Rakefile&lt;/h2&gt;
&lt;p&gt;Lastly, we want to automate the build process by adding &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; rake tasks.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Build gem into the pkg directory&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:build&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rm_rf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;pkg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;*.gemspec&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gemspec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;gem build &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gemspec&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mkdir_p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;pkg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;*.gem&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pkg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Tags version, pushes to remote, and pushes gem&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:release&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:build&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;git&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;tag&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;-m&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;changelog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;v&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Qu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git push origin master&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;git push origin v&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Qu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sh&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ls pkg/*.gem | xargs -n 1 gem push&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;Profit&lt;/h2&gt;
&lt;p&gt;This has worked out really well so far. All the activity for the project is in one repo, and pushing out a new release is really easy. Win, win!&lt;/p&gt;</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
  <entry>
    <title>What&#39;s wrong with Cucumber</title>
    <link type="text/html" rel="alternate" href="http://opensoul.org/2012/05/28/whats-wrong-with-cucumber/"/>
    <id>/2012/05/28/whats-wrong-with-cucumber</id>
    <published>2012-05-28T13:00:00Z</published>
    <category term="cucumber"/><category term="opinion"/>
    <summary type="html">&lt;p&gt;&lt;em&gt;This post has sat as a draft on my computer for well over a year now. I always intended to finish it, but am beyond caring.  So I&amp;#8217;m just going to publish it in its current form in hopes that it sparks some interesting conversation and avoids beating a dead horse.&lt;/em&gt;&lt;/p&gt;</summary>
    <content type="html">&lt;p&gt;&lt;em&gt;This post has sat as a draft on my computer for well over a year now. I always intended to finish it, but am beyond caring.  So I&amp;#8217;m just going to publish it in its current form in hopes that it sparks some interesting conversation and avoids beating a dead horse.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://cukes.info&quot;&gt;Cucumber&lt;/a&gt; is a divisive tool. Some people absolutely love it and have an irrational dedication to using it for every single project. Others hate it, either because they haven&amp;#8217;t tried it, or tried it on one project and ended up with a steaming pile of &lt;del&gt;sh&lt;/del&gt;…step definitions.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve been using cucumber since one of the first few releases. While I have been burned by it on projects, I also have a great appreciation for it.&lt;/p&gt;
&lt;p&gt;What&amp;#8217;s wrong with cucumber? Technically, nothing. It&amp;#8217;s a brilliant tool for creating DSLs to test our applications. &lt;strong&gt;The problem with cucumber is &lt;span class=&quot;caps&quot;&gt;YOU&lt;/span&gt;&lt;/strong&gt;: you don&amp;#8217;t understand &lt;strong&gt;why&lt;/strong&gt; to use it, &lt;strong&gt;when&lt;/strong&gt; to use it or &lt;strong&gt;how&lt;/strong&gt; to use it. Don&amp;#8217;t worry, though, it&amp;#8217;s not entirely your fault. Many people are responsible for encouraging you to use it in asinine ways and advertising it as a magical medical formula that will cure all your woes.&lt;/p&gt;
&lt;h2&gt;Why: understand the purpose&lt;/h2&gt;
&lt;p&gt;Cucumber is a tool for creating executable feature specifications, a.k.a acceptance tests. We write these tests to ensure that we have working code that meets our requirements. If the tests don&amp;#8217;t help achieve that, then &lt;strong&gt;don&amp;#8217;t write them&lt;/strong&gt;. For this reason, I rarely write Rails controller tests anymore.&lt;/p&gt;
&lt;p&gt;Fairly or not, many have this misconception that you should write your acceptance tests in plain text so that your client or stakeholders can read and write them. It is highly likely that your &lt;strong&gt;stakeholders won&amp;#8217;t care about cucumber features&lt;/strong&gt;. They probably won&amp;#8217;t read them, and they almost surely won&amp;#8217;t write them.&lt;/p&gt;
&lt;p&gt;You should use cucumber because it&amp;#8217;s a great tool for giving you a vocabulary to think and talk about how your application should work. As a programmer and perfectionist, I easily get mired in the implementation details and forget that the software I&amp;#8217;m writing is actually supposed to do something useful. Driving a feature with cucumber helps me first think though how it should actually work and then guides me through implementing it. It keeps me focused on writing the minimal amount of code to make the software work.&lt;/p&gt;
&lt;p&gt;Use Cucumber if it will directly help translate required features into working code. If the person doing the programming doesn&amp;#8217;t find it helpful, then don&amp;#8217;t use it!&lt;/p&gt;
&lt;h2&gt;When: you don&amp;#8217;t always need a &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Cucumber is a &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt; for creating a &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt; for writing acceptance tests. With me so far? In other words, Cucumber helps you create a vocabulary to describe how your application should work.&lt;/p&gt;
&lt;p&gt;Some apps require a &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt; to describe their behavior, but many don&amp;#8217;t. For a large business application with lots of rules and complicated logic, creating a &lt;span class=&quot;caps&quot;&gt;DSL&lt;/span&gt; is the only maintainable way to test it. Testing a simple web &lt;span class=&quot;caps&quot;&gt;API&lt;/span&gt; is really a lot quicker and easier with RSpec or Test::Unit.&lt;/p&gt;
&lt;p&gt;The advantage of using Cucumber over a plain ol&amp;#8217; testing framework is that it forces you to use a limited vocabulary to describe your application. If your application requires an expansive vocabulary to describe its functionality, then don&amp;#8217;t use Cucumber&lt;/p&gt;
&lt;h2&gt;How: the ivory tower&lt;/h2&gt;
&lt;p&gt;I don&amp;#8217;t think people understand &lt;strong&gt;why&lt;/strong&gt; and &lt;strong&gt;when&lt;/strong&gt; to use Cucumber. But what prompted me to write this post is the recent debate over the &lt;a href=&quot;http://aslakhellesoy.com/post/11055981222/the-training-wheels-came-off&quot;&gt;removal of web_steps.rb&lt;/a&gt;, and that brings us to &lt;strong&gt;how&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;One of the challenges of a programmer is to find the highest level of abstraction that makes sense. Code with too little abstraction is littered with duplication and is too complex to fit in your head. Code that is abstracted too much is too rigid and cumbersome to use. An abstraction should capture only the details that are relevant for the task at hand.&lt;/p&gt;
&lt;p&gt;For many apps, the web interface is the right level of abstraction for describing its functionality.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Cliffhanger: this is the state in which I left this article. I&amp;#8217;ve &lt;a href=&quot;https://gist.github.com/2819565&quot;&gt;created a gist for this article&lt;/a&gt;, so if you&amp;#8217;d like to finish making the argument, fork the gist and link to your version in the comments.&lt;/em&gt;&lt;/p&gt;</content>
    <author>
      <name>Brandon Keepers</name>
      <uri>http://opensoul.org</uri>
    </author>
  </entry>
  
</feed>
