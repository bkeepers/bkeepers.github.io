---
layout: post
title: "Load environment variables with dotenv"
id: 500e21bedabe9d5ec2008e95
updated: 2012-07-24T00:31:37-04:00
date: 2012-07-24T00:00:00-04:00
tags:
- code
redirect_from: /blog/archives/2012/07/24/dotenv/
---

I released "dotenv":https://github.com/bkeepers/dotenv, a handy Ruby gem that makes loading environment variables 100% less painful in development, guaranteed or your money back.

h2. Backstory

I love the emerging practice of storing application configuration in environment variables. It makes it ridiculously easy to keep secure data out of your code repository while still making it available at runtime. But it slightly complicates development. It's not always practical to set all of those environment variables on your development machine or continuous integration server where you might run multiple projects.

"Foreman":https://github.com/ddollar/foreman provides this handy feature of loading variables from @.env@, which works great for anything that you want to put in your @Procfile@. But it doesn't help you when you run your app manually, run a rake task, or open up the console. My co-workers got tired of me saying _Works For Meâ„¢_, so "dotenv":https://github.com/bkeepers/dotenv solves that problem.

h2. Frontstory

For Rails 3 apps, "dotenv":https://github.com/bkeepers/dotenv will automagically load variables from @.env@ into @ENV@ whenever the environment is bootstrapped. For non-Rails apps, it's a simple one-liner to load @.env@. Check out "dotenv on GitHub":https://github.com/bkeepers/dotenv for all the gory details.
